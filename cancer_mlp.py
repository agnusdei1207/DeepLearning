# -*- coding: utf-8 -*-
"""Cancer MLP.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1-PhTeDRp3yVxsx8gjhBKtlu5536Csrp9
"""

from sklearn.datasets import load_breast_cancer

breast_data = load_breast_cancer()

print(breast_data["DESCR"])

from sklearn.model_selection import train_test_split
X = breast_data["data"]
y = breast_data["target"]

X_train, X_test, y_train, y_test = train_test_split(X,y,random_state=1230)

print(X_train.shape)
print(y_train.shape)
print(X_test.shape)
print(y_test.shape)

# 1. 모델 구조 설계
from tensorflow.keras import Sequential
from tensorflow.keras.layers import InputLayer, Dense

model = Sequential()
model.add(InputLayer(input_shape=(30,)))
model.add(Dense(units=32, activation="sigmoid"))
model.add(Dense(units=16, activation="sigmoid"))
model.add(Dense(units=1, activation="sigmoid")) # 결과값에 activation default 값 : 항등함수 linear y = x 그대로 사용

# 2. 모델 학습/평가 방법 설정 
#수치 : mean_squared_error, 분류 : binary_crossentropy > 확률적으로 얼마나 틀렸는지 계산, 1일 경우 0일 경우 결과값에 각각의 sigmoid 를 입힌다. 결과 값을 전부 더하고 평균을 구한다.
model.compile(loss="binary_crossentropy",
              optimizer="Adam",
              metrics=["accuracy"]
              ) #정확도 표기 metrics,

# 3. 학습
breast_history = model.fit(X_train, y_train, validation_split=0.2, epochs=500) # validation 검증 데이터를 넣어 적합여부를 확인!

# 4. 결과 시각화
import matplotlib.pyplot as plt

plt.figure(figsize=(15,5)) #크기 설정(가로,세로)
plt.plot(range(1,501),
         breast_history.history["accuracy"], label="accuracy") #훈련 그래프 
plt.plot(range(1,501),
         breast_history.history["val_accuracy"], label="val_accuracy") #검증 그래프
plt.legend() #범례 label 을 보여줌
plt.show()

# 5. 모델 평가
model.evaluate(X_test, y_test)

