# -*- coding: utf-8 -*-
"""for CNN OS module npz.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1a7i359bGvaMNO2Ba4k9Rg0ec-kqA74-m
"""

!pwd # 현재위치

# Commented out IPython magic to ensure Python compatibility.
# colab notebooks 폴더로 이동
# %cd drive/MyDrive/Colab\ Notebooks

# 압축 해제
!unzip ./data/징크스.zip -d "./data/imageLOL/징크스"
!unzip ./data/가렌.zip -d "./data/imageLOL/가렌"
!unzip ./data/럭스.zip -d "./data/imageLOL/럭스"

# 사진데이터 전처리
import os

data_dir = "./data/imageLOL"
os.listdir(data_dir) # 파일 내부의 파일을 전부 list형태로 리턴

징크스_file_names = os.listdir(os.path.join(data_dir,"징크스")) # path.join 디렉토리 구분자(/ or \)로써 폴더이름을 만들어 줌
가렌_file_names = os.listdir(os.path.join(data_dir,"가렌")) # path.join 디렉토리 구분자(/ or \)로써 폴더이름을 만들어 줌
럭스_file_names = os.listdir(os.path.join(data_dir,"럭스")) # path.join 디렉토리 구분자(/ or \)로써 폴더이름을 만들어 줌

# 사진 열어보기
from PIL import Image

display(Image.open(os.path.join(data_dir,"징크스", 징크스_file_names[0]))) # display 화면에 출력해라 이미지 전용 print 문

import numpy as np

def load_images(folder_path, file_names):

  images = [] # 사진을 담을 리스트
  for f_name in file_names:
    path = os.path.join(folder_path, f_name) # 폴더 + 파일명
    img = Image.open(path).resize((224,224)) # resize 튜플 형태로 넣어야 하기에 () 사용
    
    if np.array(img).shape == (224,224,3): # 컬러사진일 경우 추가 되도록 필터링
      images.append(np.array(img)) # np.array 타입으로 변경

  return np.array(images) # list 타입 >> np.array 타입으로 리턴

징크스_images = load_images(os.path.join(data_dir,"징크스"), 징크스_file_names)

럭스_images = load_images(os.path.join(data_dir,"럭스"), 럭스_file_names)

가렌_images = load_images(os.path.join(data_dir,"가렌"), 가렌_file_names)

print("징크스 shape : ", 징크스_images.shape)
print("가렌 shape : ", 가렌_images.shape)
print("럭스 shape : ", 럭스_images.shape)

# 데이터 통합
data = np.concatenate((징크스_images, 가렌_images, 럭스_images))

# 데이터 라벨링 (징크스 : 0, 가렌 : 1, 럭스 : 2)
target = np.array([0]*200 +  [1]*181 +  [2]*74)

from sklearn.model_selection import train_test_split

X_train, X_val, y_train, y_val = train_test_split (data, target,
                                                     test_size=0.2, random_state=16,
                                                     stratify=target)

np.bincount(y_train)

np.bincount(y_val)

# 확장자 npz 
np.savez_compressed("./data/LOL.npz",
                    X_train = X_train,
                    X_val = X_val,
                    y_train = y_train,
                    y_val = y_val)

